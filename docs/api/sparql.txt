SPARQL Endpoints
================

Every Dydra repository is also a SPARQL endpoint. If you're not familiar with the
SPARQL language, we have an [introduction](/sparql).

Your repository's SPARQL endpoint is found by appending `/sparql` to the
repository's URL. So a user `jhacker` who created a repository named `foaf`
would have a SPARQL endpoint located at `http://dydra.com/jhacker/foaf/sparql`.

#### Authentication

During the beta period, you'll need to authenticate yourself for any SPARQL
query. You can do this either with HTTP Basic Authentication, or by appending
an [API token](/api/rest) to your URL.

###### HTTP Basic Authentication

To use HTTP basic authentication, simply use your username and password as
normal. We'll also accept your API token in the password field.

###### Query String

You can append your API token to a query string to any SPARQL query to
authenticate yourself. This method is not recommended, as it will log
credentials in firewall logs, but may be easier for some legacy clients to
support. 

### Dydra's SPARQL Dialect

Like all SPARQL implementations, Dydra's has some quirks. Unlike all SPARQL
implementations, our canonical description is a [set of executable
tests](http://github.com/dydra/sparql-tests), written in
[RSpec](http://rspec.info).  Some quirks are worth noting.

##### Features

We're always interested in [your feedback](http://getsatisfaction.com/dydra)
about our feature set.

##### SPARQL versions

Dydra's SPARQL processor is mostly SPARQL 1.0 conformant and supports some features of
SPARQL 1.1. As we implement new features, we'll [blog about it.](http://blog.dydra.com) 

##### Blank Node Handling

Dydra treats blank node identifiers as canonical. When data is imported,
existing blank node identifiers are saved, and new, canonical blank node
identifiers are created for new nodes. In practice, this is quite useful: the
output of one query can be used for another.

##### Numeric Normalization

Dydra normalizes numeric datatypes. See the test suite test tagged for native
arithmetic for details.

